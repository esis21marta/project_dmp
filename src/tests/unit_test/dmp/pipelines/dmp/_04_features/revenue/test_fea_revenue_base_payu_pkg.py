# Copyright 2018-present QuantumBlack Visual Analytics Limited
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, AND
# NONINFRINGEMENT. IN NO EVENT WILL THE LICENSOR OR OTHER CONTRIBUTORS
# BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY, WHETHER IN AN
# ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF, OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
# The QuantumBlack Visual Analytics Limited ("QuantumBlack") name and logo
# (either separately or in combination, "QuantumBlack Trademarks") are
# trademarks of QuantumBlack. The License does not grant you any right or
# license to the QuantumBlack Trademarks. You may not use the QuantumBlack
# Trademarks or any confusingly similar mark as a trademark for your product,
#     or use the QuantumBlack Trademarks in any other manner that might cause
# confusion in the marketplace, including but not limited to in advertising,
# on websites, or on software.
#
# See the License for the specific language governing permissions and
# limitations under the License.

import datetime
from unittest import mock

import yaml
from pyspark.sql import Row, SparkSession

from src.dmp.pipelines.dmp._04_features.revenue.fea_revenue_base_payu_pkg import (
    fea_revenue_base_payu_pkg,
)


class TestFeatureRevenueMonthlySpend:
    config_feature = yaml.load(open("conf/dmp/training/parameters_feature.yml"))[
        "config_feature"
    ]

    @mock.patch(
        "src.dmp.pipelines.dmp._04_features.revenue.fea_revenue_base_payu_pkg.get_start_date",
        return_value=datetime.date(2018, 10, 10),
        autospec=True,
    )
    @mock.patch(
        "src.dmp.pipelines.dmp._04_features.revenue.fea_revenue_base_payu_pkg.get_end_date",
        return_value=datetime.date(2020, 10, 10),
        autospec=True,
    )
    def test_fea_revenue_base_payu_pkg(
        self, mock_get_start_date, mock_get_end_date, spark_session: SparkSession
    ):
        sc = spark_session.sparkContext

        df_revenue_weekly = sc.parallelize(
            [
                # Case A) Sanity test - only payu
                [
                    "111",
                    "2019-10-14",
                    100,
                    100,
                    100,
                    100,
                    500,
                    100,
                    100,
                    100,
                    100,
                    10,
                    10,
                    10,
                    10,
                    10,
                    10,
                    10,
                    10,
                    10,
                    10,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                ],
                # Case B) Sanity test - only package
                [
                    "222",
                    "2019-10-14",
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    400,
                    100,
                    100,
                    100,
                    100,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                ],
                # Case C) Edge case - three weeks with one payu, one package, and one full payu & package
                [
                    "333",
                    "2019-10-07",
                    100,
                    100,
                    100,
                    100,
                    500,
                    100,
                    100,
                    100,
                    100,
                    10,
                    10,
                    10,
                    10,
                    10,
                    10,
                    10,
                    10,
                    10,
                    10,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                ],
                [
                    "333",
                    "2019-10-14",
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    400,
                    100,
                    100,
                    100,
                    100,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                ],
                [
                    "333",
                    "2019-10-21",
                    100,
                    100,
                    100,
                    100,
                    500,
                    100,
                    100,
                    100,
                    100,
                    10,
                    10,
                    10,
                    10,
                    10,
                    10,
                    10,
                    10,
                    10,
                    10,
                    400,
                    100,
                    100,
                    100,
                    100,
                    100,
                    100,
                    100,
                    100,
                    100,
                    100,
                    100,
                    100,
                    100,
                    100,
                    100,
                    100,
                    100,
                    100,
                    100,
                    100,
                    100,
                    100,
                    100,
                    100,
                ],
            ]
        )

        df_revenue_weekly = spark_session.createDataFrame(
            df_revenue_weekly.map(
                lambda x: Row(
                    msisdn=x[0],
                    weekstart=x[1],
                    rev_voice=x[2],
                    rev_sms=x[3],
                    rev_data=x[4],
                    rev_roam=x[5],
                    rev_payu_tot=x[6],
                    rev_payu_voice=x[7],
                    rev_payu_sms=x[8],
                    rev_payu_data=x[9],
                    rev_payu_roam=x[10],
                    rev_payu_dls_mms_cnt=x[11],
                    rev_payu_dls_mms_p2p=x[12],
                    rev_payu_dls_music=x[13],
                    rev_payu_dls_other_vas=x[14],
                    rev_payu_dls_rbt=x[15],
                    rev_payu_dls_sms_nonp2p=x[16],
                    rev_payu_dls_tp=x[17],
                    rev_payu_dls_ussd=x[18],
                    rev_payu_dls_videocall=x[19],
                    rev_payu_dls_voice_nonp2p=x[20],
                    rev_pkg_tot=x[21],
                    rev_pkg_voice=x[22],
                    rev_pkg_sms=x[23],
                    rev_pkg_data=x[24],
                    rev_pkg_roam=x[25],
                    rev_alt_total=x[26],
                    rev_alt_voice=x[27],
                    rev_alt_voice_pkg=x[28],
                    rev_alt_data=x[29],
                    rev_alt_data_pkg=x[30],
                    rev_alt_sms=x[31],
                    rev_alt_sms_pkg=x[32],
                    rev_alt_digital=x[33],
                    rev_alt_roam=x[34],
                    rev_alt_roam_pkg=x[35],
                    rev_alt_digital_mms_cnt=x[36],
                    rev_alt_digital_mms_p2p=x[37],
                    rev_alt_digital_music=x[38],
                    rev_alt_digital_other_vas=x[39],
                    rev_alt_digital_rbt=x[40],
                    rev_alt_digital_sms_nonp2p=x[41],
                    rev_alt_digital_tp=x[42],
                    rev_alt_digital_ussd=x[43],
                    rev_alt_digital_voice_nonp2p=x[44],
                    rev_alt_digital_videocall=x[45],
                )
            )
        )

        out_cols = [
            "msisdn",  # 1
            "weekstart",  # 2
            "fea_rev_tot_sum_03m",  # 3
            "fea_rev_roam_tot_sum_03m",  # 4
            "fea_rev_voice_payu_sum_03m",  # 5
            "fea_rev_data_payu_sum_03m",  # 6
            "fea_rev_sms_payu_sum_03m",  # 7
            "fea_rev_dls_mms_cnt_payu_sum_03m",  # 8
            "fea_rev_dls_mms_p2p_payu_sum_03m",  # 9
            "fea_rev_dls_music_payu_sum_03m",  # 10
            "fea_rev_dls_other_vas_payu_sum_03m",  # 11
            "fea_rev_dls_rbt_payu_sum_03m",  # 12
            "fea_rev_dls_sms_nonp2p_payu_sum_03m",  # 13
            "fea_rev_dls_tp_payu_sum_03m",  # 14
            "fea_rev_dls_ussd_payu_sum_03m",  # 15
            "fea_rev_dls_videocall_payu_sum_03m",  # 16
            "fea_rev_dls_voice_nonp2p_payu_sum_03m",  # 17
            "fea_rev_roam_payu_sum_03m",  # 18
            "fea_rev_voice_pkg_sum_03m",  # 19
            "fea_rev_sms_pkg_sum_03m",  # 20
            "fea_rev_data_pkg_sum_03m",  # 21
            "fea_rev_roam_pkg_sum_03m",  # 22
            "fea_rev_alt_digital_mms_cnt_sum_03m",  # 23
            "fea_rev_alt_digital_mms_p2p_sum_03m",  # 24
            "fea_rev_alt_digital_music_sum_03m",  # 25
            "fea_rev_alt_digital_other_vas_sum_03m",  # 26
            "fea_rev_alt_digital_rbt_sum_03m",  # 27
            "fea_rev_alt_digital_sms_nonp2p_sum_03m",  # 28
            "fea_rev_alt_digital_tp_sum_03m",  # 29
            "fea_rev_alt_digital_ussd_sum_03m",  # 30
            "fea_rev_alt_digital_videocall_sum_03m",  # 31
            "fea_rev_alt_digital_voice_nonp2p_sum_03m",  # 32
            "fea_rev_alt_tot_sum_03m",  # 33
            "fea_rev_alt_voice_tot_sum_03m",  # 34
            "fea_rev_alt_digital_tot_sum_03m",  # 35
            "fea_rev_alt_roam_tot_sum_03m",  # 36
            "fea_rev_alt_voice_pkg_sum_03m",  # 37
            "fea_rev_alt_data_pkg_sum_03m",  # 38
            "fea_rev_alt_sms_pkg_sum_03m",  # 39
            "fea_rev_alt_roam_pkg_sum_03m",  # 40
        ]

        out = fea_revenue_base_payu_pkg(
            df_revenue_weekly, self.config_feature, "all", []
        ).select(out_cols)
        out_list = [
            [
                i[0],
                i[1],
                i[2],
                i[3],
                i[4],
                i[5],
                i[6],
                i[7],
                i[8],
                i[9],
                i[10],
                i[11],
                i[12],
                i[13],
                i[14],
                i[15],
                i[16],
                i[17],
                i[18],
                i[19],
                i[20],
                i[21],
                i[21],
                i[22],
                i[23],
                i[24],
                i[25],
                i[26],
                i[27],
                i[28],
                i[29],
                i[30],
                i[31],
                i[32],
                i[33],
                i[34],
                i[35],
                i[36],
                i[37],
                i[38],
                i[39],
            ]
            for i in out.collect()
        ]

        assert sorted(out_list) == [
            # Case A) Sanity test - only payu
            [
                "111",
                "2019-10-14",
                500,
                100,
                100,
                100,
                100,
                10,
                10,
                10,
                10,
                10,
                10,
                10,
                10,
                10,
                10,
                100,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
            ],
            # Case B) Sanity test - only package
            [
                "222",
                "2019-10-14",
                400,
                100,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                100,
                100,
                100,
                100,
                100,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
            ],
            # Case C) Edge case - three weeks with one payu, one package, and one full payu & package
            [
                "333",
                "2019-10-07",
                500,
                100,
                100,
                100,
                100,
                10,
                10,
                10,
                10,
                10,
                10,
                10,
                10,
                10,
                10,
                100,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
            ],
            [
                "333",
                "2019-10-14",
                900,
                200,
                100,
                100,
                100,
                10,
                10,
                10,
                10,
                10,
                10,
                10,
                10,
                10,
                10,
                100,
                100,
                100,
                100,
                100,
                100,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
            ],
            [
                "333",
                "2019-10-21",
                1800,
                400,
                200,
                200,
                200,
                20,
                20,
                20,
                20,
                20,
                20,
                20,
                20,
                20,
                20,
                200,
                200,
                200,
                200,
                200,
                200,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
            ],
        ]
