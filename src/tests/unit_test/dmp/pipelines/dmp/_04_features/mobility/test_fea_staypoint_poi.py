from unittest import mock

from pyspark.sql import SparkSession
from pyspark.sql.types import (
    DoubleType,
    IntegerType,
    LongType,
    StringType,
    StructField,
    StructType,
)

from src.dmp.pipelines.dmp._04_features.mobility.nodes.fea_staypoint_poi import (
    mobility_staypoint_poi_features,
)
from src.tests.pysaprk_df_equality import assert_df_frame_equal


class TestFeaStaypointPoi:
    @mock.patch(
        "src.dmp.pipelines.dmp._04_features.mobility.nodes.fea_staypoint_poi.calc_distance_bw_2_lat_long",
    )
    @mock.patch(
        "src.dmp.pipelines.dmp._04_features.mobility.nodes.fea_staypoint_poi.neighbors",
        return_value=[
            ["qqu5e", "qqu5j", "qqu5k", "qqu6a", "qqu6b", "qqu6c", "qquc1", "qquc4"]
        ],
        autospec=True,
    )
    def test_fea_staypoint_poi(
        self,
        mock_neighbors,
        mock_calc_distance_bw_2_lat_long,
        spark_session: SparkSession,
    ):
        mock_calc_distance_bw_2_lat_long.return_value = spark_session.createDataFrame(
            data=[
                [
                    "imsi_1",
                    "2020-03",
                    -6.38925,
                    106.98825,
                    -6.3892,
                    106.9882,
                    "qqu5d",
                    "qqu57",
                    14880,
                    "kelurahan_1",
                    "kecamatan_3",
                    "kabu_4",
                    "provinc_6",
                    "commercial",
                    "commercial-store",
                    1,
                    750.586091493751,
                ],
                [
                    "imsi_1",
                    "2020-03",
                    -6.38925,
                    106.98825,
                    -6.3892,
                    106.988,
                    "qqu5d",
                    "qqu5c",
                    14880,
                    "kelurahan_1",
                    "kecamatan_3",
                    "kabu_4",
                    "provinc_6",
                    "commercial",
                    "commercial",
                    1,
                    1150.86091493751,
                ],
                [
                    "imsi_1",
                    "2020-04",
                    -6.38925,
                    106.98825,
                    -6.3892,
                    106.9882,
                    "qqu5d",
                    "qqu57",
                    11280,
                    "kelurahan_1",
                    "kecamatan_3",
                    "kabu_4",
                    "provinc_6",
                    "commercial",
                    "commercial-store",
                    1,
                    750.586091493751,
                ],
                [
                    "imsi_1",
                    "2020-04",
                    -6.38925,
                    106.98825,
                    -6.3892,
                    106.988,
                    "qqu5d",
                    "qqu5c",
                    11280,
                    "kelurahan_1",
                    "kecamatan_3",
                    "kabu_4",
                    "provinc_6",
                    "commercial",
                    "commercial",
                    1,
                    1150.86091493751,
                ],
                [
                    "imsi_1",
                    "2020-05",
                    -6.38925,
                    106.98825,
                    -6.3892,
                    106.9882,
                    "qqu5d",
                    "qqu57",
                    29280,
                    "kelurahan_1",
                    "kecamatan_3",
                    "kabu_4",
                    "provinc_6",
                    "commercial",
                    "commercial-store",
                    1,
                    750.586091493751,
                ],
                [
                    "imsi_1",
                    "2020-05",
                    -6.38925,
                    106.98825,
                    -6.3892,
                    106.988,
                    "qqu5d",
                    "qqu5c",
                    29280,
                    "kelurahan_1",
                    "kecamatan_3",
                    "kabu_4",
                    "provinc_6",
                    "commercial",
                    "commercial",
                    1,
                    1150.86091493751,
                ],
            ],
            schema=StructType(
                [
                    StructField("msisdn", StringType(), False),
                    StructField("mo_id", StringType(), False),
                    StructField("lat1", DoubleType(), True),
                    StructField("long1", DoubleType(), True),
                    StructField("lat2", DoubleType(), True),
                    StructField("long2", DoubleType(), True),
                    StructField("geohash", StringType(), True),
                    StructField("poi_geohash", StringType(), True),
                    StructField("agg_duration", LongType(), True),
                    StructField("kelurahan_name", StringType(), True),
                    StructField("kecamatan_name", StringType(), True),
                    StructField("kabupaten_name", StringType(), True),
                    StructField("province_name", StringType(), True),
                    StructField("category_type_1", StringType(), True),
                    StructField("category_type_2", StringType(), True),
                    StructField("stay_rank", IntegerType(), True),
                    StructField("distance", DoubleType(), True),
                ]
            ),
        )

        staypoint_df = spark_session.createDataFrame(
            data=[
                [
                    "imsi_1",
                    "2020-03",
                    "qqu5d",
                    14880,
                    "kelurahan_1",
                    "kecamatan_3",
                    "kabu_4",
                    "provinc_6",
                    -6.38925,
                    106.98825,
                    1,
                    "2000-01-21",
                    14880,
                    1,
                ],
                [
                    "imsi_1",
                    "2020-04",
                    "qqu5d",
                    11280,
                    "kelurahan_1",
                    "kecamatan_3",
                    "kabu_4",
                    "provinc_6",
                    -6.38925,
                    106.98825,
                    1,
                    "2000-01-23",
                    11280,
                    1,
                ],
                [
                    "imsi_1",
                    "2020-05",
                    "qqu5d",
                    29280,
                    "kelurahan_1",
                    "kecamatan_3",
                    "kabu_4",
                    "provinc_6",
                    -6.38925,
                    106.98825,
                    1,
                    "2000-01-25",
                    29280,
                    1,
                ],
            ],
            schema=StructType(
                [
                    StructField("msisdn", StringType(), False),
                    StructField("mo_id", StringType(), False),
                    StructField("geohash", StringType(), False),
                    StructField("agg_duration", LongType(), True),
                    StructField("kelurahan_name", StringType(), True),
                    StructField("kecamatan_name", StringType(), True),
                    StructField("kabupaten_name", StringType(), True),
                    StructField("province_name", StringType(), True),
                    StructField("lat1", DoubleType(), True),
                    StructField("long1", DoubleType(), True),
                    StructField("village_cnt", LongType(), False),
                    StructField("month_mapped_dt", StringType(), False),
                    StructField("agg_duration_max", LongType(), False),
                    StructField("duration_max_flag", IntegerType(), False),
                ]
            ),
        )

        poi_agg_df = spark_session.createDataFrame(
            data=[
                [
                    "supermarket",
                    106.9882,
                    -6.3892,
                    "commercial",
                    "commercial-store",
                    "qqu57",
                    "qqu59",
                ],
                [
                    "supermarket",
                    106.9882,
                    -6.3892,
                    "commercial",
                    "commercial-store",
                    "qqu57",
                    "qqu5e",
                ],
                [
                    "supermarket",
                    106.9882,
                    -6.3892,
                    "commercial",
                    "commercial-store",
                    "qqu57",
                    "qqu5c",
                ],
                [
                    "supermarket",
                    106.9882,
                    -6.3892,
                    "commercial",
                    "commercial-store",
                    "qqu57",
                    "qqu5f",
                ],
                [
                    "supermarket",
                    106.9882,
                    -6.3892,
                    "commercial",
                    "commercial-store",
                    "qqu57",
                    "qqu5g",
                ],
                [
                    "supermarket",
                    106.9882,
                    -6.3892,
                    "commercial",
                    "commercial-store",
                    "qqu57",
                    "qqu53",
                ],
                [
                    "supermarket",
                    106.9882,
                    -6.3892,
                    "commercial",
                    "commercial-store",
                    "qqu57",
                    "qqu56",
                ],
                [
                    "supermarket",
                    106.9882,
                    -6.3892,
                    "commercial",
                    "commercial-store",
                    "qqu57",
                    "qqu5d",
                ],
                [
                    "mall",
                    106.988,
                    -6.3892,
                    "commercial",
                    "commercial",
                    "qqu5c",
                    "qqu59",
                ],
                [
                    "mall",
                    106.988,
                    -6.3892,
                    "commercial",
                    "commercial",
                    "qqu5c",
                    "qqu5e",
                ],
                [
                    "mall",
                    106.988,
                    -6.3892,
                    "commercial",
                    "commercial",
                    "qqu5d",
                    "qqu5d",
                ],
                [
                    "mall",
                    106.988,
                    -6.3892,
                    "commercial",
                    "commercial",
                    "qqu5c",
                    "qqu5f",
                ],
                [
                    "mall",
                    106.988,
                    -6.3892,
                    "commercial",
                    "commercial",
                    "qqu5c",
                    "qqu5g",
                ],
                [
                    "mall",
                    106.988,
                    -6.3892,
                    "commercial",
                    "commercial",
                    "qqu5c",
                    "qqu53",
                ],
                [
                    "mall",
                    106.988,
                    -6.3892,
                    "commercial",
                    "commercial",
                    "qqu5c",
                    "qqu56",
                ],
                [
                    "mall",
                    106.988,
                    -6.3892,
                    "commercial",
                    "commercial",
                    "qqu5c",
                    "qqu57",
                ],
            ],
            schema=StructType(
                [
                    StructField("category", StringType(), False),
                    StructField("longitude", DoubleType(), True),
                    StructField("latitude", DoubleType(), True),
                    StructField("category_type_1", StringType(), True),
                    StructField("category_type_2", StringType(), True),
                    StructField("poi_geohash", StringType(), False),
                    StructField("poi_neighbor_geohash", StringType(), True),
                ]
            ),
        )

        actual_fea_df = mobility_staypoint_poi_features(staypoint_df, poi_agg_df)

        expected_fea_df = spark_session.createDataFrame(
            data=[
                ["imsi_1", "2020-03", 750.586091493751, 1, 1150.86091493751, 0,],
                ["imsi_1", "2020-04", 750.586091493751, 1, 1150.86091493751, 0,],
                ["imsi_1", "2020-05", 750.586091493751, 1, 1150.86091493751, 0,],
            ],
            schema=StructType(
                [
                    StructField("msisdn", StringType(), False),
                    StructField("mo_id", StringType(), False),
                    StructField(
                        "fea_mobility_staypoint_1_cat_1_commercial_min_poi_dist",
                        DoubleType(),
                        True,
                    ),
                    StructField(
                        "fea_mobility_staypoint_1_cat_1_commercial_poi_1km_num",
                        LongType(),
                        True,
                    ),
                    StructField(
                        "fea_mobility_staypoint_1_cat_2_commercial_min_poi_dist",
                        DoubleType(),
                        True,
                    ),
                    StructField(
                        "fea_mobility_staypoint_1_cat_2_commercial_poi_1km_num",
                        LongType(),
                        True,
                    ),
                ]
            ),
        )

        assert_df_frame_equal(actual_fea_df, expected_fea_df)
